diff --git a/CMakeLists.txt b/CMakeLists.txt
index 9184b943..066dbfa5 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -126,7 +126,7 @@ foreach(arch_ ${architectures})
 endforeach(arch_ ${architectures})
 
 # Options
-option(BUILD_SHARED_LIBS "Enable building of shared libraries (dll/so)" OFF)
+option(BUILD_SHARED_LIBS "Enable building of shared libraries (dll/so)" ON)
 set(UA_LOGLEVEL 300 CACHE STRING "Level at which logs shall be reported")
 set(UA_MULTITHREADING 0 CACHE STRING "Level of multithreading (0-99: No Multithreading, 100-199: Thread-Safe API, >=200: Internal Threads")
 option(UA_ENABLE_HISTORIZING "Enable basic support for historical access (client and server)" OFF)
@@ -610,8 +610,9 @@ if(NOT UA_FORCE_CPP AND (CMAKE_COMPILER_IS_GNUCC OR "x${CMAKE_C_COMPILER_ID}" ST
             if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 10.0)
                 set(SANITIZER_FLAGS "${SANITIZER_FLAGS} -fsanitize-coverage=trace-pc-guard")
             endif()
-            set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${SANITIZER_FLAGS}")
-            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${SANITIZER_FLAGS}")
+            # TODO: When using `flutter run` we get undefined references to various address sanitizer things
+            # set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${SANITIZER_FLAGS}")
+            # set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${SANITIZER_FLAGS}")
         endif()
     endif()
 
@@ -1313,6 +1314,10 @@ list(APPEND open62541_LIBRARIES ${ua_architecture_append_to_library})
 target_compile_definitions(open62541 PUBLIC UA_ARCHITECTURE_${UA_ARCHITECTURE_UPPER})
 
 # DLL requires linking to dependencies
+# TODO: This introduces dependencies that do not exist in android like libpthread. They are not required and should not be here in the first place. Find out how to remove those without this hack
+if (ANDROID)
+    set(open62541_LIBRARIES "")
+endif (ANDROID)
 target_link_libraries(open62541 ${open62541_LIBRARIES})
 
 ##########################
